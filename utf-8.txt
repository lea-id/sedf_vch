» так, а в чем же собственно проблема? ј проблема заключаетс€ в том, что руби не корректно работает со строками в кодировке utf-8.
Ёто особенно отчетливо про€вл€етс€ при работе с такими методами как downcase, upcase и capitalize Ц они просто игнорируют эти строки.
ƒл€ примера возьмем строку У“≈—“Ф и попробуем привести ее к нижнему регистру:
У“≈—“Ф.downcase
У“≈—“Ф # полученный результат
„то же, попробуем решить эту досадную проблемку.
–ешение
ƒл€ решени€ этой проблемы существует несколько различных способов, например гем UnicodeUtils на который € посмотрел первым, но он не реализует метода capitalize, а это очень досадно, есть еще ActiveSupport вход€щий в состав ruby on rails, но его € особо не рассматривал так как хотелось найти более универсальное решение. “огда € решил продолжить поиски и результат не заставил себ€ ждать, им стал gem от Yoshida Masato и называетс€ он УUnicodeФ.
Unicode
Gem Unicode предоставл€ет нам все необходимые методы дл€ работы с utf-8, например такие как:
upcase
downcase
capitalize
я перечислил только некоторые из них, так как остальные в статье не упоминаютс€.
–асширение класса String
ѕришло врем€ научить класс String нормально работать со строками utf-8, дл€ этого создадим файл Уstring_helper.rbФ следующего содержани€:
#coding utf-8
require "unicode";
class String
   def downcase
     Unicode::downcase(self)
   end
   def downcase!
     self.replace downcase
   end
   def upcase
     Unicode::upcase(self)
   end
   def upcase!
     self.replace upcase
   end
   def capitalize
     Unicode::capitalize(self)
   end
   def capitalize!
     self.replace capitalize
   end
end
¬ нем мы переопредел€ем стандартные методы класса String своими. “еперь подключа€ его в наших проектах мы получаем нормально работающий с utf-8 класс String.
Ётот метод можно использовать также и в проектах на rails например положив созданный нами файл в папку Уconfig/initializers/Ф.
